@startuml
skinparam classAttributeIconSize 0

class Main {
  {static} main(args : String[])
}

class PointOfSale {
  - idLastSale : int
  - catalogFileName : String
  + makeNewSale() : int
  + addLineItemToSale(idSale : int, prodName : String, qty : int)
  + printReceiptOfSale(saleId : int)
  + payOneSaleCash(saleId : int, amountHanded : double)
  + payOneSaleCreditCard(saleId : int, ccnumber : String)
  + printPayment(saleId : int)
  - searchSaleById(id : int) : Sale
}

class ProductCatalog {
  + ProductCatalog(fileName : String)
  + searchByName(name : String) : ProductSpecification
  - addProductSpecification(name : String, price : double)
}

note left of ProductCatalog::ProductCatalog {
text file with
Coca-cola 1.20
Nestea    1.50
Moritz    1.90
...
}

class ProductSpecification {
  - name : String
  - price : double
  + getName() : String
  + getPrice() : double
}

class Sale {
  - id : int
  - dateTime : LocalDateTime
  + Sale(id : int)
  + addLineItem(prodSpec : ProductSpecification, qty : int)
  + payCash(amountHanded : double)
  + payCreditCard(amountToPay : double, ccnumber : String)
  + printPayment()
  + total() : double
  + printReceipt()
}

class SaleLineItem {
  - quantity : int
  + incrementQuantity()
  + subtotal() : double
  + print()
}

abstract class Payment {
  # amountToPay : double
  + Payment(amountToPay : double)
  + {abstract} pay()
  + {abstract} print()
}

class PaymentInCash extends Payment {
  - amountHanded : double
  - cashBox : CashBox
  + PaymentInCash(amountToPay : double, cashBox : CashBox)
  + pay(amountHanded : double)
  + print()
  - calculateChange(totalSale : double) : double
}

class PaymentCreditCard extends Payment {
  - ccnumber : String
  - authorized : boolean
  + PaymentCreditCard(ccnumber : String, amountToPay : double)
  + print()
  - authorize() : boolean
}

Sale --> "0,1" Payment : payment
PointOfSale o--> "*" Sale : sales
Sale *--> "*" SaleLineItem : saleLineItems
SaleLineItem --> "1" ProductSpecification : productSpecification
PointOfSale --> "1" ProductCatalog : productCatalog
ProductCatalog o--> "*" ProductSpecification : productSpecifications

abstract class ChangeCash {
  # change : double
  # cashBox : CashBox
  # keys : double[]
  + ChangeCash(double change, CashBox cashBox)
  + change() : int[]
}

class ChangeGreedy extends ChangeCash{
  + ChangeCash(double change, CashBox cashBox)
  + change() : int[]
}

class ChangeRandom extends ChangeCash{
  + ChangeCash(double change, CashBox cashBox)
  + change() : int[]
}

class CashBox {
  - cashbox : HashMap<Double, Integer>
  - keys : double[]
  + CashBox()
  + getCashbox() : HashMap<Double, Integer>
  + takeBill(amount : double)
  + update(changes : int[])
  + cashBoxAmounts()
}

PaymentInCash --> ChangeCash
PointOfSale *-- CashBox : cashBox

@enduml

